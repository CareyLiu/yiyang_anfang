package com.yiyang.cn.activity;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.CompoundButton;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.Switch;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import com.bumptech.glide.Glide;import com.google.gson.Gson;import com.jaeger.library.StatusBarUtil;import com.lzy.okgo.OkGo;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.rairmmd.andmqtt.AndMqtt;import com.rairmmd.andmqtt.MqttSubscribe;import com.rairmmd.andmqtt.MqttUnSubscribe;import com.scwang.smartrefresh.layout.SmartRefreshLayout;import com.scwang.smartrefresh.layout.api.RefreshLayout;import com.scwang.smartrefresh.layout.listener.OnRefreshListener;import com.yiyang.cn.R;import com.yiyang.cn.app.App;import com.yiyang.cn.app.BaseActivity;import com.yiyang.cn.app.ConstanceValue;import com.yiyang.cn.app.Notice;import com.yiyang.cn.app.UIHelper;import com.yiyang.cn.callback.JsonCallback;import com.yiyang.cn.common.StringUtils;import com.yiyang.cn.config.AppResponse;import com.yiyang.cn.config.PreferenceHelper;import com.yiyang.cn.config.UserManager;import com.yiyang.cn.dialog.MyCarCaoZuoDialog_CaoZuoTIshi;import com.yiyang.cn.dialog.MyCarCaoZuoDialog_Success;import com.yiyang.cn.dialog.ZhiNengFamilyAddDIalog;import com.yiyang.cn.dialog.ZhiNengRoomDeviceAutoJiaohuaDialog;import com.yiyang.cn.dialog.newdia.TishiDialog;import com.yiyang.cn.get_net.Urls;import com.yiyang.cn.inter.OnItemDialogClickListener;import com.yiyang.cn.model.SuiYiTieModel;import com.yiyang.cn.model.ZhiNengFamilyEditBean;import com.yiyang.cn.model.ZhiNengWeiYuBean;import com.yiyang.cn.mqtt_zhiling.ZnjjMqttMingLing;import com.yiyang.cn.util.DoMqttValue;import com.yiyang.cn.util.SoundPoolUtils;import com.suke.widget.SwitchButton;import org.eclipse.paho.client.mqttv3.IMqttActionListener;import org.eclipse.paho.client.mqttv3.IMqttToken;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import butterknife.BindView;import rx.android.schedulers.AndroidSchedulers;import rx.functions.Action1;import static com.yiyang.cn.get_net.Urls.ZHINENGJIAJU;public class ZhiNengJiajuWeiYuAutoActivity extends BaseActivity implements View.OnClickListener {    @BindView(R.id.ll_online_state)    LinearLayout llOnlineState;    @BindView(R.id.tv_auto_switch_title)    TextView tvAutoSwitchTitle;    @BindView(R.id.auto_switch_button)    SwitchButton autoSwitchButton;    @BindView(R.id.rl_auto_switch)    RelativeLayout rlAutoSwitch;    @BindView(R.id.tv_weiyu_preset_time)    TextView tvWeiyuPresetTime;    @BindView(R.id.rl_weiyu_preset_time)    RelativeLayout rlWeiyuPresetTime;    @BindView(R.id.tv_weiyu_interval_time)    TextView tvWeiyuIntervalTime;    @BindView(R.id.rl_weiyu_interval_time)    RelativeLayout rlWeiyuIntervalTime;    @BindView(R.id.tv_weiyu_tijiao)    TextView tvWeiyuTijiao;    @BindView(R.id.ll_auto_weiyu_config)    LinearLayout llAutoWeiyuConfig;    @BindView(R.id.tv_model_title)    TextView tvModelTitle;    @BindView(R.id.switch_ertong)    SwitchButton switchErtong;    @BindView(R.id.rl_ertongmoshi)    RelativeLayout rlErtongmoshi;    @BindView(R.id.tv_family_title)    TextView tvFamilyTitle;    @BindView(R.id.tv_family)    TextView tvFamily;    @BindView(R.id.tv_room_title)    TextView tvRoomTitle;    @BindView(R.id.tv_room)    TextView tvRoom;    @BindView(R.id.img_room_into)    ImageView imgRoomInto;    @BindView(R.id.rl_room)    RelativeLayout rlRoom;    @BindView(R.id.tv_device_name_title)    TextView tvDeviceNameTitle;    @BindView(R.id.tv_device_name)    TextView tvDeviceName;    @BindView(R.id.img_device_into)    ImageView imgDeviceInto;    @BindView(R.id.rl_device_name)    RelativeLayout rlDeviceName;    @BindView(R.id.tv_device_type_title)    TextView tvDeviceTypeTitle;    @BindView(R.id.tv_device_type)    TextView tvDeviceType;    @BindView(R.id.tv_device_state_title)    TextView tvDeviceStateTitle;    @BindView(R.id.tv_device_state)    TextView tvDeviceState;    @BindView(R.id.rl_device_state)    RelativeLayout rlDeviceState;    @BindView(R.id.iv_tishi)    ImageView ivTishi;    @BindView(R.id.tv_noti)    TextView tvNoti;    @BindView(R.id.tv_room_delete)    TextView tvRoomDelete;    @BindView(R.id.srL_smart)    SmartRefreshLayout srLSmart;    @BindView(R.id.iv_lijiweiyu)    ImageView ivLijiweiyu;    @BindView(R.id.tv_lijiweiyu)    TextView tvLijiweiyu;    @BindView(R.id.rl_weiyu)    RelativeLayout rlWeiyu;    @BindView(R.id.iv_tingzhiweiyu)    ImageView ivTingzhiweiyu;    @BindView(R.id.tv_tingzhiweiyu)    TextView tvTingzhiweiyu;    @BindView(R.id.rl_tingzhiweiyu)    RelativeLayout rlTingzhiweiyu;    @BindView(R.id.iv_yugang)    ImageView ivYugang;    @BindView(R.id.iv_yushi)    ImageView ivYushi;    @BindView(R.id.tv_weiyu_quanshu)    TextView tvWeiyuQuanshu;    @BindView(R.id.rl_weiyu_quanshu)    RelativeLayout rlWeiyuQuanshu;    @BindView(R.id.iv_shebei_zaixianzhuangtai_img)    ImageView ivShebeiZaixianzhuangtaiImg;    @BindView(R.id.tv_shebei_zaixian_huashu)    TextView tvShebeiZaixianHuashu;    @BindView(R.id.tv_caozuotishiyin)    TextView tvCaozuotishiyin;    @BindView(R.id.sbtn_caozuotishiyin)    Switch sbtnCaozuotishiyin;    @BindView(R.id.rl_caozuotishiyin)    RelativeLayout rlCaozuotishiyin;    private Context context = ZhiNengJiajuWeiYuAutoActivity.this;    private String device_id = "";    private String device_type = "";    private String member_type = "";    private String device_ccid = "";//ccid    private String workState = "";//工作状态是否开启    private ZhiNengWeiYuBean.DataBean dataBean;    private boolean autoState = false;    private boolean switchState = false;    private boolean ertongSwitchState = false;    public ZnjjMqttMingLing mqttMingLing = null;    private String erTongMoShi = "0";// 儿童模式默认关闭    private String isVoice = "1";    @Override    public int getContentViewResId() {        return R.layout.activity_zhineng_weiyu_detail;    }    @Override    public void initImmersion() {        mImmersionBar.with(this).statusBarColor(R.color.white).init();    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        StatusBarUtil.setLightMode(this);        PreferenceHelper.getInstance(mContext).putString(App.CHOOSE_KONGZHI_XIANGMU, DoMqttValue.ZHINENGJIAJU);        initToolbar();        initView();        getnet();        Glide.with(mContext).load(R.drawable.gif_yugang).into(ivYugang);        _subscriptions.add(toObservable().observeOn(AndroidSchedulers.mainThread()).subscribe(new Action1<Notice>() {            @Override            public void call(Notice message) {            }        }));        rlWeiyu.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (isVoice.equals("1"))                    SoundPoolUtils.soundPool(mContext, R.raw.lijiweiyu);                UIHelper.ToastMessage(mContext, "执行喂鱼");                String quanshu = PreferenceHelper.getInstance(mContext).getString(App.WEIYUQUANSHU, "01");                mqttMingLing.setWeiYuAction(device_ccid, "01", "01", new IMqttActionListener() {                    @Override                    public void onSuccess(IMqttToken asyncActionToken) {                        ivYushi.setVisibility(View.VISIBLE);                        Glide.with(mContext).load(R.drawable.yushi).into(ivYushi);                    }                    @Override                    public void onFailure(IMqttToken asyncActionToken, Throwable exception) {                        UIHelper.ToastMessage(mContext, "未发送指令");                    }                });            }        });        rlTingzhiweiyu.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                UIHelper.ToastMessage(mContext, "停止喂鱼");                if (isVoice.equals("1"))                    SoundPoolUtils.soundPool(mContext, R.raw.tingzhiweiyu);                mqttMingLing.setAction(device_ccid, "02", new IMqttActionListener() {                    @Override                    public void onSuccess(IMqttToken asyncActionToken) {                        ivYushi.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(IMqttToken asyncActionToken, Throwable exception) {                        UIHelper.ToastMessage(mContext, "未发送指令");                    }                });            }        });        sbtnCaozuotishiyin.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {                if (!buttonView.isPressed()) {                    return;                }                if (isChecked) {                    sheZhiTiShiYin("1");                } else {                    sheZhiTiShiYin("2");                }            }        });    }    private void sheZhiWeiYu(String strKaiQiOrGuanBi) {        /**         * @param zhuangZhiId   装置id         * @param erTongMoShi   儿童模式 1.开2.关（开启状态物理按键失效）         * @param ziDongMoShi   自动模式 1.开启2.关闭         * @param kaiShiShiJian 开始时间  0101**  56位补齐         * @param shiJianJianGe 时间间隔  01h 或 01day         * @param listener      监听         */        String weiyuTime = tvWeiyuPresetTime.getText().toString();        String shijianJianGe = tvWeiyuIntervalTime.getText().toString() + "h";        Log.i("shijianJianGe", shijianJianGe);        weiyuTime = weiyuTime.replace(":", "");        Log.i("tv_weiyu_preset_time", weiyuTime);    }    private void initView() {        device_id = getIntent().getStringExtra("device_id");        if (device_id == null) {            device_id = "";        }        device_type = getIntent().getStringExtra("device_type");        if (device_type == null) {            device_type = "";        }        member_type = getIntent().getStringExtra("member_type");        if (member_type == null) {            member_type = "";        }        srLSmart.setOnRefreshListener(new OnRefreshListener() {            @Override            public void onRefresh(@NonNull RefreshLayout refreshLayout) {                getnet();            }        });        srLSmart.setEnableLoadMore(false);        rlRoom.setOnClickListener(this);        rlDeviceName.setOnClickListener(this);        rlWeiyuPresetTime.setOnClickListener(this);        rlWeiyuPresetTime.setOnClickListener(this);        tvRoomDelete.setOnClickListener(this);        rlWeiyuIntervalTime.setOnClickListener(this);        rlWeiyuQuanshu.setOnClickListener(this);        tvWeiyuTijiao.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                //sheZhiWeiYu("1");                setWeiYuNet();            }        });        autoSwitchButton.setOnCheckedChangeListener(new SwitchButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(SwitchButton view, boolean isChecked) {                if (onlineState.equals("2")) {                    TishiDialog tishiDialog = new TishiDialog(mContext, 3, new TishiDialog.TishiDialogListener() {                        @Override                        public void onClickCancel(View v, TishiDialog dialog) {                        }                        @Override                        public void onClickConfirm(View v, TishiDialog dialog) {                            getnet();                        }                        @Override                        public void onDismiss(TishiDialog dialog) {                        }                    });                    tishiDialog.setTextContent("设备离线，请检查设备情况");                    tishiDialog.setTextConfirm("刷新");                    tishiDialog.setTextCancel("算了");                    tishiDialog.show();                    autoSwitchButton.setChecked(false);                    return;                }                if (isChecked) {                    if (!switchState) {                        String kaiqitishi = "";                        kaiqitishi = "开启自动喂鱼？默认每天8点自动喂鱼，您可修改时间哦";                        MyCarCaoZuoDialog_CaoZuoTIshi myCarCaoZuoDialog_caoZuoTIshi = new MyCarCaoZuoDialog_CaoZuoTIshi(ZhiNengJiajuWeiYuAutoActivity.this,                                "提示", kaiqitishi, "取消", "确定", new MyCarCaoZuoDialog_CaoZuoTIshi.OnDialogItemClickListener() {                            @Override                            public void clickLeft() {                                autoSwitchButton.setChecked(false);                                switchState = false;                                llAutoWeiyuConfig.setVisibility(View.GONE);                            }                            @Override                            public void clickRight() {                                autoSwitchButton.setChecked(true);                                switchState = true;                                llAutoWeiyuConfig.setVisibility(View.VISIBLE);                            }                        });                        myCarCaoZuoDialog_caoZuoTIshi.show();                    }                } else {                    if (switchState) {                        String guanbitishi = "";                        guanbitishi = "您确定要关闭自动喂鱼吗？";                        MyCarCaoZuoDialog_CaoZuoTIshi myCarCaoZuoDialog_caoZuoTIshi = new MyCarCaoZuoDialog_CaoZuoTIshi(ZhiNengJiajuWeiYuAutoActivity.this,                                "提示", guanbitishi, "取消", "确定", new MyCarCaoZuoDialog_CaoZuoTIshi.OnDialogItemClickListener() {                            @Override                            public void clickLeft() {                                autoSwitchButton.setChecked(true);                                switchState = true;                                llAutoWeiyuConfig.setVisibility(View.VISIBLE);                            }                            @Override                            public void clickRight() {                                autoSwitchButton.setChecked(false);                                switchState = false;                                llAutoWeiyuConfig.setVisibility(View.GONE);                                //sheZhiWeiYu("2");                                guanBiWeiYu();                            }                        });                        myCarCaoZuoDialog_caoZuoTIshi.show();                    }                }            }        });        switchErtong.setOnCheckedChangeListener(new SwitchButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(SwitchButton view, boolean isChecked) {                if (isChecked) {                    if (!ertongSwitchState) {                        MyCarCaoZuoDialog_CaoZuoTIshi myCarCaoZuoDialog_caoZuoTIshi = new MyCarCaoZuoDialog_CaoZuoTIshi(ZhiNengJiajuWeiYuAutoActivity.this,                                "提示", "您要开启儿童模式吗？开启后，设备物理按键失效", "取消", "确定", new MyCarCaoZuoDialog_CaoZuoTIshi.OnDialogItemClickListener() {                            @Override                            public void clickLeft() {                                switchErtong.setChecked(false);                                ertongSwitchState = false;                                erTongMoShi = "0";                                /**                                 * 儿童模式 M09030101.（喂鱼、浇花装置使用，开启时物理按键失效）                                 * M09 : 命令码                                 * 0301：装置id                                 * 01：开启；  02：关闭                                 */                                /**                                 * @param zhuangZhiId   装置id                                 * @param caoZuoFangShi 方式 打开或关闭                                 * @return                                 */                                mqttMingLing.setErTongMoShi(device_id, "0", new IMqttActionListener() {                                    @Override                                    public void onSuccess(IMqttToken asyncActionToken) {                                        UIHelper.ToastMessage(mContext, "关闭儿童模式");                                    }                                    @Override                                    public void onFailure(IMqttToken asyncActionToken, Throwable exception) {                                    }                                });                            }                            @Override                            public void clickRight() {                                switchErtong.setChecked(true);                                ertongSwitchState = true;                                erTongMoShi = "1";                                /**                                 * 儿童模式 M09030101.（喂鱼、浇花装置使用，开启时物理按键失效）                                 * M09 : 命令码                                 * 0301：装置id                                 * 01：开启；  02：关闭                                 */                                /**                                 * @param zhuangZhiId   装置id                                 * @param caoZuoFangShi 方式 打开或关闭                                 * @return                                 */                                mqttMingLing.setErTongMoShi(device_id, "1", new IMqttActionListener() {                                    @Override                                    public void onSuccess(IMqttToken asyncActionToken) {                                        UIHelper.ToastMessage(mContext, "打开儿童模式成功");                                    }                                    @Override                                    public void onFailure(IMqttToken asyncActionToken, Throwable exception) {                                    }                                });                            }                        });                        myCarCaoZuoDialog_caoZuoTIshi.show();                    }                } else {                    if (ertongSwitchState) {                        MyCarCaoZuoDialog_CaoZuoTIshi myCarCaoZuoDialog_caoZuoTIshi = new MyCarCaoZuoDialog_CaoZuoTIshi(ZhiNengJiajuWeiYuAutoActivity.this,                                "提示", "您要关闭儿童模式吗？关闭后，设备物理按键恢复", "取消", "确定", new MyCarCaoZuoDialog_CaoZuoTIshi.OnDialogItemClickListener() {                            @Override                            public void clickLeft() {                                switchErtong.setChecked(true);                                ertongSwitchState = true;                                erTongMoShi = "0";                            }                            @Override                            public void clickRight() {                                switchErtong.setChecked(false);                                ertongSwitchState = false;                                erTongMoShi = "1";                            }                        });                        myCarCaoZuoDialog_caoZuoTIshi.show();                    }                }            }        });        tvAutoSwitchTitle.setText("自动喂鱼设置");        llOnlineState.setVisibility(View.VISIBLE);        rlAutoSwitch.setVisibility(View.VISIBLE);        rlErtongmoshi.setVisibility(View.GONE);        _subscriptions.add(toObservable().observeOn(AndroidSchedulers.mainThread()).subscribe(new Action1<Notice>() {            @Override            public void call(Notice message) {                if (message.type == ConstanceValue.MSG_ROOM_DEVICE_CHANGENAME) {                    changeDevice(message.content.toString());                }            }        }));    }    @Override    public boolean showToolBar() {        return true;    }    @Override    protected void initToolbar() {        super.initToolbar();        tv_title.setText("设备详情");        tv_title.setTextSize(17);        tv_title.setTextColor(getResources().getColor(R.color.black));        mToolbar.setNavigationIcon(R.mipmap.backbutton);        mToolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.iv_auto:                break;            case R.id.rl_room:                Bundle bundle = new Bundle();                bundle.putString("device_id", dataBean.getDevice_id());                bundle.putString("family_id", dataBean.getFamily_id());                startActivity(new Intent(context, ZhiNengRoomManageActivity.class).putExtras(bundle));                break;            case R.id.rl_device_name:                ZhiNengFamilyAddDIalog zhiNengFamilyAddDIalog = new ZhiNengFamilyAddDIalog(context, ConstanceValue.MSG_ROOM_DEVICE_CHANGENAME);                zhiNengFamilyAddDIalog.show();                break;            case R.id.rl_weiyu_preset_time:                //设置喂鱼开始时间                List<String> weiyuPresetTimeList = new ArrayList<>();                for (int i = 0; i < 24; i++) {                    weiyuPresetTimeList.add(String.format("%02d", i) + ":00");                }                ZhiNengRoomDeviceAutoJiaohuaDialog weiyuPresetTime = new ZhiNengRoomDeviceAutoJiaohuaDialog(context,                        "设置自动喂鱼开始时间");                weiyuPresetTime.setPicker(weiyuPresetTimeList);                weiyuPresetTime.show();                weiyuPresetTime.setOnItemDialogClickListener(new OnItemDialogClickListener() {                    @Override                    public void onClick(View view, int first, int second, int third) {                        tvWeiyuPresetTime.setText(weiyuPresetTimeList.get(first));                    }                });                break;            case R.id.rl_weiyu_interval_time:                //设置喂鱼时间间隔                List<String> weiyuIntervalTimeList = new ArrayList<>();                weiyuIntervalTimeList.add("12");                weiyuIntervalTimeList.add("24");                ZhiNengRoomDeviceAutoJiaohuaDialog weiyuIntervalTime = new ZhiNengRoomDeviceAutoJiaohuaDialog(context,                        "设置自动喂鱼时间间隔");                weiyuIntervalTime.setPicker(weiyuIntervalTimeList);                weiyuIntervalTime.show();                weiyuIntervalTime.setOnItemDialogClickListener(new OnItemDialogClickListener() {                    @Override                    public void onClick(View view, int first, int second, int third) {                        tvWeiyuIntervalTime.setText(weiyuIntervalTimeList.get(first));                    }                });                break;            case R.id.tv_room_delete:                MyCarCaoZuoDialog_CaoZuoTIshi myCarCaoZuoDialog_caoZuoTIshi = new MyCarCaoZuoDialog_CaoZuoTIshi(context,                        "提示", "确定要删除设备吗？", "取消", "确定", new MyCarCaoZuoDialog_CaoZuoTIshi.OnDialogItemClickListener() {                    @Override                    public void clickLeft() {                    }                    @Override                    public void clickRight() {                        if (member_type.equals("1") || member_type.equals("3")) {                            if (dataBean.getDevice_type().equals("00")) {                                //删除主控设备                                deleteMainDevice();                            } else {                                //删除设备                                deleteDevice();                            }                        } else {                            Toast.makeText(context, "操作失败，需要管理员身份", Toast.LENGTH_SHORT).show();                        }                    }                });                myCarCaoZuoDialog_caoZuoTIshi.show();                break;            case R.id.rl_weiyu_quanshu:                List<String> weiyuIntervalTimeList1 = new ArrayList<>();                for (int i = 1; i < 100; i++) {                    weiyuIntervalTimeList1.add(String.format("%02d", i));                }                ZhiNengRoomDeviceAutoJiaohuaDialog weiyuIntervalTime1 = new ZhiNengRoomDeviceAutoJiaohuaDialog(context,                        "设置自动喂鱼圈数");                weiyuIntervalTime1.setPicker(weiyuIntervalTimeList1);                weiyuIntervalTime1.show();                weiyuIntervalTime1.setOnItemDialogClickListener(new OnItemDialogClickListener() {                    @Override                    public void onClick(View view, int first, int second, int third) {                        tvWeiyuQuanshu.setText(weiyuIntervalTimeList1.get(first));                    }                });                break;        }    }    private String onlineState;//是否在线    private void getnet() {        //访问网络获取数据 下面的列表数据        Map<String, String> map = new HashMap<>();        map.put("code", "16035");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(context).getAppToken());        map.put("device_id", device_id);        Gson gson = new Gson();        String a = gson.toJson(map);        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<ZhiNengWeiYuBean.DataBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<ZhiNengWeiYuBean.DataBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<ZhiNengWeiYuBean.DataBean>> response) {                        if (srLSmart != null) {                            srLSmart.setEnableRefresh(true);                            srLSmart.finishRefresh();                            srLSmart.setEnableLoadMore(false);                        }                        if (response.body().msg.equals("ok")) {                            dataBean = response.body().data.get(0);                            tvFamily.setText(dataBean.getFamily_name());                            tvRoom.setText(dataBean.getRoom_name());                            tvDeviceName.setText(dataBean.getDevice_name());                            tvDeviceType.setText(dataBean.getDevice_type_name());                            device_ccid = dataBean.getDevice_ccid();                            onlineState = dataBean.getOnline_state();                            if (onlineState.equals("1")) {                                tvShebeiZaixianHuashu.setText("设备在线");                                ivShebeiZaixianzhuangtaiImg.setBackgroundResource(R.drawable.bg_zhineng_device_online);                            } else if (onlineState.equals("2")) {                                tvShebeiZaixianHuashu.setText("设备离线");                                ivShebeiZaixianzhuangtaiImg.setBackgroundResource(R.drawable.bg_zhineng_device_offline);                            }                            if (dataBean.getKids_mode().equals("")) {                            } else {                            }                            mqttMingLing = new ZnjjMqttMingLing(mContext, dataBean.getDevice_ccid_up(), dataBean.getServer_id());                            mqttMingLing.subscribeShiShiXinXi(new IMqttActionListener() {                                @Override                                public void onSuccess(IMqttToken asyncActionToken) {                                    Log.i("Rair", "请求实时数据");                                }                                @Override                                public void onFailure(IMqttToken asyncActionToken, Throwable exception) {                                }                            });                            if (response.body().data.get(0).getFj_time() != null) {                                tvWeiyuPresetTime.setText(response.body().data.get(0).getFj_time());                            }                            if (!StringUtils.isEmpty(response.body().data.get(0).getFj_interval())) {                                String jiange = response.body().data.get(0).getFj_interval();                                jiange = jiange.substring(0, 2);                                tvWeiyuIntervalTime.setText(jiange);                            }                            if (!StringUtils.isEmpty(response.body().data.get(0).getFj_times())) {                                tvWeiyuQuanshu.setText(response.body().data.get(0).getFj_times());                            }                        }                        if (StringUtils.isEmpty(response.body().data.get(0).is_voice)) {                            isVoice = "1";                            sbtnCaozuotishiyin.setChecked(true);                        } else {                            isVoice = response.body().data.get(0).is_voice;                            if (isVoice.equals("1")) {                                sbtnCaozuotishiyin.setChecked(true);                            } else if (isVoice.equals("2")) {                                sbtnCaozuotishiyin.setChecked(false);                            }                        }                        showLoadSuccess();                    }                    @Override                    public void onError(Response<AppResponse<ZhiNengWeiYuBean.DataBean>> response) {                        String str = response.getException().getMessage();                        UIHelper.ToastMessage(mContext, response.getException().getMessage());                    }                    @Override                    public void onStart(Request<AppResponse<ZhiNengWeiYuBean.DataBean>, ? extends Request> request) {                        super.onStart(request);                        showLoading();                    }                    @Override                    public void onFinish() {                        super.onFinish();                    }                });    }    TishiDialog tishiDialog;    /**     * 修改设备名字     */    private void changeDevice(String deviceName) {        Map<String, String> map = new HashMap<>();        map.put("code", "16033");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(context).getAppToken());        map.put("family_id", dataBean.getFamily_id());        map.put("device_id", dataBean.getDevice_id());        map.put("old_name", dataBean.getDevice_name());        map.put("device_name", deviceName);        Gson gson = new Gson();        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<ZhiNengFamilyEditBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<ZhiNengFamilyEditBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<ZhiNengFamilyEditBean>> response) {                        if (response.body().msg_code.equals("0000")) {                            tvDeviceName.setText(deviceName);                            MyCarCaoZuoDialog_Success myCarCaoZuoDialog_success = new MyCarCaoZuoDialog_Success(ZhiNengJiajuWeiYuAutoActivity.this,                                    "成功", "名字修改成功咯", "好的", new MyCarCaoZuoDialog_Success.OnDialogItemClickListener() {                                @Override                                public void clickLeft() {                                }                                @Override                                public void clickRight() {                                    Notice notice = new Notice();                                    notice.type = ConstanceValue.MSG_CAOZUODONGTAISHITI;                                    sendRx(notice);                                }                            });                            myCarCaoZuoDialog_success.show();                        }                    }                    @Override                    public void onError(Response<AppResponse<ZhiNengFamilyEditBean>> response) {                        String str = response.getException().getMessage();                        tishiDialog = new TishiDialog(mContext, 3, new TishiDialog.TishiDialogListener() {                            @Override                            public void onClickCancel(View v, TishiDialog dialog) {                                tishiDialog.dismiss();                            }                            @Override                            public void onClickConfirm(View v, TishiDialog dialog) {                                finish();                            }                            @Override                            public void onDismiss(TishiDialog dialog) {                            }                        });                        tishiDialog.setTextContent(str);                        tishiDialog.show();                    }                });    }    /**     * 删除主控设备     */    private void deleteMainDevice() {        Map<String, String> map = new HashMap<>();        map.put("code", "16037");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(context).getAppToken());        map.put("device_ccid", dataBean.getDevice_ccid());        Gson gson = new Gson();        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<ZhiNengFamilyEditBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<ZhiNengFamilyEditBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<ZhiNengFamilyEditBean>> response) {                        if (response.body().msg_code.equals("0000")) {                            Notice notice = new Notice();                            notice.type = ConstanceValue.MSG_ZHINENGJIAJU_SHOUYE_SHUAXIN;                            sendRx(notice);                            MyCarCaoZuoDialog_Success myCarCaoZuoDialog_success = new MyCarCaoZuoDialog_Success(ZhiNengJiajuWeiYuAutoActivity.this,                                    "成功", "设备删除成功", "好的", new MyCarCaoZuoDialog_Success.OnDialogItemClickListener() {                                @Override                                public void clickLeft() {                                }                                @Override                                public void clickRight() {                                    finish();                                }                            });                            myCarCaoZuoDialog_success.show();                        }                    }                    @Override                    public void onError(Response<AppResponse<ZhiNengFamilyEditBean>> response) {                        String str = response.getException().getMessage();                        tishiDialog = new TishiDialog(mContext, 3, new TishiDialog.TishiDialogListener() {                            @Override                            public void onClickCancel(View v, TishiDialog dialog) {                                tishiDialog.dismiss();                            }                            @Override                            public void onClickConfirm(View v, TishiDialog dialog) {                                finish();                            }                            @Override                            public void onDismiss(TishiDialog dialog) {                            }                        });                        tishiDialog.setTextContent(str);                        tishiDialog.show();                    }                });    }    /**     * 删除设备     */    private void deleteDevice() {        Map<String, String> map = new HashMap<>();        map.put("code", "16034");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(context).getAppToken());        map.put("family_id", dataBean.getFamily_id());        map.put("device_id", dataBean.getDevice_id());        Gson gson = new Gson();        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<ZhiNengFamilyEditBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<ZhiNengFamilyEditBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<ZhiNengFamilyEditBean>> response) {                        if (response.body().msg_code.equals("0000")) {                            Notice notice = new Notice();                            notice.type = ConstanceValue.MSG_ZHINENGJIAJU_SHOUYE_SHUAXIN;                            sendRx(notice);                            MyCarCaoZuoDialog_Success myCarCaoZuoDialog_success = new MyCarCaoZuoDialog_Success(ZhiNengJiajuWeiYuAutoActivity.this,                                    "成功", "设备删除成功", "好的", new MyCarCaoZuoDialog_Success.OnDialogItemClickListener() {                                @Override                                public void clickLeft() {                                }                                @Override                                public void clickRight() {                                    finish();                                }                            });                            myCarCaoZuoDialog_success.show();                        }                    }                    @Override                    public void onError(Response<AppResponse<ZhiNengFamilyEditBean>> response) {                        String str = response.getException().getMessage();                        tishiDialog = new TishiDialog(mContext, 3, new TishiDialog.TishiDialogListener() {                            @Override                            public void onClickCancel(View v, TishiDialog dialog) {                                tishiDialog.dismiss();                            }                            @Override                            public void onClickConfirm(View v, TishiDialog dialog) {                                finish();                            }                            @Override                            public void onDismiss(TishiDialog dialog) {                            }                        });                        tishiDialog.setTextContent(str);                        tishiDialog.show();                    }                });    }    /**     * 用于其他Activty跳转到该Activity     *     * @param context     */    public static void actionStart(Context context, String device_id, String device_type, String member_type) {        Intent intent = new Intent(context, ZhiNengJiajuWeiYuAutoActivity.class);        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);        intent.putExtra("device_id", device_id);        intent.putExtra("device_type", device_type);        intent.putExtra("member_type", member_type);        context.startActivity(intent);    }    private void setWeiYuNet() {        //访问网络获取数据 下面的列表数据        Map<String, String> map = new HashMap<>();        map.put("code", "16039");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(context).getAppToken());        map.put("device_id", device_id);        map.put("fj_times", tvWeiyuQuanshu.getText().toString().trim());        map.put("fj_interval", tvWeiyuIntervalTime.getText().toString().trim() + "h");        map.put("fj_time", tvWeiyuPresetTime.getText().toString().trim());        Gson gson = new Gson();        String a = gson.toJson(map);        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<ZhiNengWeiYuBean.DataBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<ZhiNengWeiYuBean.DataBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<ZhiNengWeiYuBean.DataBean>> response) {                        UIHelper.ToastMessage(mContext, "提交设置成功");                        showLoadSuccess();                    }                    @Override                    public void onError(Response<AppResponse<ZhiNengWeiYuBean.DataBean>> response) {                        UIHelper.ToastMessage(mContext, response.getException().getMessage());                    }                    @Override                    public void onStart(Request<AppResponse<ZhiNengWeiYuBean.DataBean>, ? extends Request> request) {                        super.onStart(request);                        showLoading();                    }                    @Override                    public void onFinish() {                        super.onFinish();                    }                });    }    public void guanBiWeiYu() {        //访问网络获取数据 下面的列表数据        Map<String, String> map = new HashMap<>();        map.put("code", "16040");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(context).getAppToken());        map.put("device_id", device_id);        Gson gson = new Gson();        String a = gson.toJson(map);        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<ZhiNengWeiYuBean.DataBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<ZhiNengWeiYuBean.DataBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<ZhiNengWeiYuBean.DataBean>> response) {                        UIHelper.ToastMessage(mContext, "关闭喂鱼设置成功");                        showLoadSuccess();                    }                    @Override                    public void onError(Response<AppResponse<ZhiNengWeiYuBean.DataBean>> response) {                        UIHelper.ToastMessage(mContext, response.getException().getMessage());                    }                    @Override                    public void onStart(Request<AppResponse<ZhiNengWeiYuBean.DataBean>, ? extends Request> request) {                        super.onStart(request);                        showLoading();                    }                    @Override                    public void onFinish() {                        super.onFinish();                    }                });    }    private void sheZhiTiShiYin(String isVoice) {        //访问网络获取数据 下面的列表数据        Map<String, String> map = new HashMap<>();        map.put("code", "16053");        map.put("key", Urls.key);        map.put("token", UserManager.getManager(mContext).getAppToken());        map.put("device_id", device_id);        map.put("is_voice", isVoice);        Gson gson = new Gson();        String a = gson.toJson(map);        Log.e("map_data", gson.toJson(map));        OkGo.<AppResponse<SuiYiTieModel.DataBean>>post(ZHINENGJIAJU)                .tag(this)//                .upJson(gson.toJson(map))                .execute(new JsonCallback<AppResponse<SuiYiTieModel.DataBean>>() {                    @Override                    public void onSuccess(Response<AppResponse<SuiYiTieModel.DataBean>> response) {                        if (isVoice.equals("1")) {                            UIHelper.ToastMessage(mContext, "开启提示音设置成功");                            ZhiNengJiajuWeiYuAutoActivity.this.isVoice = "1";                        } else if (isVoice.equals("2")) {                            UIHelper.ToastMessage(mContext, "关闭提示音设置成功");                            ZhiNengJiajuWeiYuAutoActivity.this.isVoice = "2";                        }                        showLoadSuccess();                    }                    @Override                    public void onError(Response<AppResponse<SuiYiTieModel.DataBean>> response) {                        String str = response.getException().getMessage();                        UIHelper.ToastMessage(mContext, response.getException().getMessage());                    }                    @Override                    public void onStart(Request<AppResponse<SuiYiTieModel.DataBean>, ? extends Request> request) {                        super.onStart(request);                        showLoading();                    }                    @Override                    public void onFinish() {                        super.onFinish();                    }                });    }}